
package cyprusgui;

import client.ClientController;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.JMenuItem;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableRowSorter;
import support.Vehicle;
import support.VehicleListener;
import tableModels.PendingVehicleDataModel;
import tableModels.RecentVehicleDataModel;
import tableModels.SearchVehicleDataModel;

/**
 *
 * @author James Sampica
 */
public class MainForm extends javax.swing.JFrame implements VehicleListener {

    private PendingVehicleDataModel pendingModel;
    private RecentVehicleDataModel recentModel;
    private SearchVehicleDataModel searchModel;
    
    private TableRowSorter<PendingVehicleDataModel> pendingSorter;
    private TableRowSorter<RecentVehicleDataModel> recentSorter;
    
    /**
     * Creates new form MainForm
     */
    public MainForm() throws Exception {

        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pendingButtonGroup = new javax.swing.ButtonGroup();
        searchButtonGroup = new javax.swing.ButtonGroup();
        recentButtonGroup = new javax.swing.ButtonGroup();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        vehiclesPendingPanel = new javax.swing.JPanel();
        pendingFilterTextInput = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        pendingTable = new javax.swing.JTable();
        recentViolationsPanel = new javax.swing.JPanel();
        recentFilterTextInput = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        recentTable = new javax.swing.JTable();
        searchPanel = new javax.swing.JPanel();
        searchButton = new javax.swing.JButton();
        searchTextInput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        searchTable = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        exitMenuItem = new javax.swing.JMenuItem();
        settingsMenu = new javax.swing.JMenu();
        serverSettingsMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        helpMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CyPRUS");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTabbedPane2.setFocusable(false);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/plateIcon.png"))); // NOI18N
        jLabel1.setToolTipText("Plate Number");

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/lotIcon.png"))); // NOI18N
        jLabel2.setToolTipText("Lot Information");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/dateIcon.png"))); // NOI18N
        jLabel3.setToolTipText("Date Entered");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/timeIcon.png"))); // NOI18N
        jLabel4.setToolTipText("Time Remaining");

        pendingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        pendingTable.setFocusable(false);
        pendingTable.setRowSelectionAllowed(false);
        pendingTable.setTableHeader(null);
        jScrollPane4.setViewportView(pendingTable);

        javax.swing.GroupLayout vehiclesPendingPanelLayout = new javax.swing.GroupLayout(vehiclesPendingPanel);
        vehiclesPendingPanel.setLayout(vehiclesPendingPanelLayout);
        vehiclesPendingPanelLayout.setHorizontalGroup(
            vehiclesPendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, vehiclesPendingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(vehiclesPendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(vehiclesPendingPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addContainerGap())
                    .addGroup(vehiclesPendingPanelLayout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel1)
                        .addGroup(vehiclesPendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(vehiclesPendingPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(pendingFilterTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(vehiclesPendingPanelLayout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(jLabel2)
                                .addGap(90, 90, 90)
                                .addComponent(jLabel4)
                                .addGap(36, 36, 36)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(57, 57, 57))))
        );
        vehiclesPendingPanelLayout.setVerticalGroup(
            vehiclesPendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(vehiclesPendingPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pendingFilterTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(vehiclesPendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addGroup(vehiclesPendingPanelLayout.createSequentialGroup()
                        .addGroup(vehiclesPendingPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(1, 1, 1))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Vehicles Pending", vehiclesPendingPanel);

        jLabel8.setText("Plate #");

        jLabel9.setText("Lot #");

        jLabel10.setText("Date of Violation");

        recentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        recentTable.setFocusable(false);
        recentTable.setTableHeader(null);
        jScrollPane5.setViewportView(recentTable);

        javax.swing.GroupLayout recentViolationsPanelLayout = new javax.swing.GroupLayout(recentViolationsPanel);
        recentViolationsPanel.setLayout(recentViolationsPanelLayout);
        recentViolationsPanelLayout.setHorizontalGroup(
            recentViolationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recentViolationsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(recentViolationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(recentViolationsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(98, 98, 98)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(33, 33, 33))
                    .addGroup(recentViolationsPanelLayout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(recentFilterTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        recentViolationsPanelLayout.setVerticalGroup(
            recentViolationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(recentViolationsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(recentFilterTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(recentViolationsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 431, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Recent Violations", recentViolationsPanel);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        jLabel5.setText("Plate #");

        jLabel6.setText("Lot #");

        jLabel7.setText("Date of Violation");

        searchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        searchTable.setTableHeader(null);
        jScrollPane6.setViewportView(searchTable);

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchTextInput)
                        .addGap(169, 169, 169))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(97, 97, 97)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel7)
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane6)
                        .addContainerGap())))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchButton)
                    .addComponent(searchTextInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 428, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane2.addTab("Search Violations", searchPanel);

        fileMenu.setText("File");

        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        jMenuBar1.add(fileMenu);

        settingsMenu.setText("Settings");

        serverSettingsMenuItem.setText("Server Settings");
        serverSettingsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                serverSettingsMenuItemActionPerformed(evt);
            }
        });
        settingsMenu.add(serverSettingsMenuItem);

        jMenuBar1.add(settingsMenu);

        helpMenu.setText("Help");

        helpMenuItem.setText("Help Contents");
        helpMenu.add(helpMenuItem);

        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        jMenuBar1.add(helpMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-493)/2, (screenSize.height-598)/2, 493, 598);
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        ClientController.disconnectClient();

        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        AboutForm aboutForm = new AboutForm(this, true);
        aboutForm.setVisible(true);
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void serverSettingsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_serverSettingsMenuItemActionPerformed

        SettingsDialog settingsdialog = new SettingsDialog(this, true);
        settingsdialog.setVisible(true);

    }//GEN-LAST:event_serverSettingsMenuItemActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        ClientController.setup();
        ClientController.registerDataListener(this);

        
        setupModels();
        setupPopups();
        setupSorters();

        ClientController.test();
        //ClientController.activeVehiclesRequest();

    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        ClientController.disconnectClient();
    }//GEN-LAST:event_formWindowClosing

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        
        if(!searchTextInput.getText().isEmpty()){
            ((SearchVehicleDataModel)searchTable.getModel()).clearData();
            ClientController.searchRequest(searchTextInput.getText());
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new MainForm().setVisible(true);
                } catch (Exception ex) {
                    System.out.println(ex.getMessage());
                }
            }
        });
    }
    
    private void setPendingFilter() {
        RowFilter<PendingVehicleDataModel, Object> rf;
        
        //If current expression doesn't parse, don't update.
        try {
            rf = RowFilter.regexFilter(pendingFilterTextInput.getText(), 0, 1);
        } catch (java.util.regex.PatternSyntaxException e) {
            return;
        }
        pendingSorter.setRowFilter(rf);
    }
    
    private void setRecentFilter() {
        RowFilter<RecentVehicleDataModel, Object> rf;
        
        //If current expression doesn't parse, don't update.
        try {
            rf = RowFilter.regexFilter(recentFilterTextInput.getText(), 0);
        } catch (java.util.regex.PatternSyntaxException e) {
            return;
        }
        recentSorter.setRowFilter(rf);
    }

    @Override
    public void onVehicleMessage(final Vehicle vehicle) {

        //Let swing decide when to add to the table model
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                
                //If the model doesnt contain it then its a new vehicle
                if (!pendingModel.contains(vehicle) && vehicle.getGraceEndDate() > 0) {
                    pendingModel.addRow(vehicle);
                    pendingTable.addRowSelectionInterval(0, 0);
                }else if(vehicle.getGraceEndDate() == 0){
                    
                    searchModel.addRow(vehicle);
                }
                else {
                    //If it does contain it then remove it from the list without violation
                    pendingModel.removeRow(vehicle);
                    
                }
            }
        });


    }

    private void setupModels() {
        recentModel = new RecentVehicleDataModel();
        pendingModel = new PendingVehicleDataModel(recentModel);
        searchModel = new SearchVehicleDataModel();

        pendingTable.setModel(pendingModel);
        recentTable.setModel(recentModel);
        searchTable.setModel(searchModel);

        pendingTable.setShowVerticalLines(true);
        recentTable.setShowVerticalLines(true);
        searchTable.setShowVerticalLines(true);
        
        
    }

    private void setupSorters() {
        pendingSorter = new TableRowSorter(pendingModel);

        pendingTable.setRowSorter(pendingSorter);
        
        pendingFilterTextInput.getDocument().addDocumentListener(
                new DocumentListener() {
                    @Override
                    public void changedUpdate(DocumentEvent e) {
                        setPendingFilter();
                    }

                    @Override
                    public void insertUpdate(DocumentEvent e) {
                        setPendingFilter();
                    }

                    @Override
                    public void removeUpdate(DocumentEvent e) {
                        setPendingFilter();
                    }
                });
        
        recentSorter = new TableRowSorter(recentModel);

        recentTable.setRowSorter(recentSorter);
        
        recentFilterTextInput.getDocument().addDocumentListener(
                new DocumentListener() {
                    @Override
                    public void changedUpdate(DocumentEvent e) {
                        setRecentFilter();
                    }

                    @Override
                    public void insertUpdate(DocumentEvent e) {
                        setRecentFilter();
                    }

                    @Override
                    public void removeUpdate(DocumentEvent e) {
                        setRecentFilter();
                    }
                });
    }

    private void setupPopups() {
        
        pendingTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                final int selectedRow = pendingTable.rowAtPoint(e.getPoint());

                //If selected row is legal and it's a popup trigger and clicking on table
                if ((selectedRow >= 0 && selectedRow < pendingTable.getRowCount())
                        && (e.isPopupTrigger() && e.getComponent() instanceof JTable)) {

                    //Make new popup
                    JPopupMenu popup = new JPopupMenu();
                    JMenuItem imageViewer = new JMenuItem("View Image");

                    //Add the click listener
                    imageViewer.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent event) {
                            //Open the viewer dialog on click
                            (new ImageViewerDialog(null, true, pendingModel.getRow(selectedRow))).setVisible(true);
                        }
                    });

                    //Add component
                    popup.add(imageViewer);

                    //Show popup
                    popup.show(e.getComponent(), e.getX(), e.getY());
                }
            }
        });
        
        recentTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                final int selectedRow = recentTable.rowAtPoint(e.getPoint());

                //If selected row is legal and it's a popup trigger and clicking on table
                if ((selectedRow >= 0 && selectedRow < recentTable.getRowCount())
                        && (e.isPopupTrigger() && e.getComponent() instanceof JTable)) {

                    //Make new popup
                    JPopupMenu popup = new JPopupMenu();
                    JMenuItem imageViewer = new JMenuItem("View Image");

                    //Add the click listener
                    imageViewer.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent event) {
                            //Open the viewer dialog on click
                            (new ImageViewerDialog(null, true, recentModel.getRow(selectedRow))).setVisible(true);
                        }
                    });

                    //Add component
                    popup.add(imageViewer);

                    //Show popup
                    popup.show(e.getComponent(), e.getX(), e.getY());
                }
            }
        });
        
        searchTable.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                final int selectedRow = searchTable.rowAtPoint(e.getPoint());

                //If selected row is legal and it's a popup trigger and clicking on table
                if ((selectedRow >= 0 && selectedRow < searchTable.getRowCount())
                        && (e.isPopupTrigger() && e.getComponent() instanceof JTable)) {

                    //Make new popup
                    JPopupMenu popup = new JPopupMenu();
                    JMenuItem imageViewer = new JMenuItem("View Image");

                    //Add the click listener
                    imageViewer.addActionListener(new ActionListener() {
                        @Override
                        public void actionPerformed(ActionEvent event) {
                            //Open the viewer dialog on click
                            (new ImageViewerDialog(null, true, searchModel.getRow(selectedRow))).setVisible(true);
                        }
                    });

                    //Add component
                    popup.add(imageViewer);

                    //Show popup
                    popup.show(e.getComponent(), e.getX(), e.getY());
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JMenuItem helpMenuItem;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.ButtonGroup pendingButtonGroup;
    private javax.swing.JTextField pendingFilterTextInput;
    private javax.swing.JTable pendingTable;
    private javax.swing.ButtonGroup recentButtonGroup;
    private javax.swing.JTextField recentFilterTextInput;
    private javax.swing.JTable recentTable;
    private javax.swing.JPanel recentViolationsPanel;
    private javax.swing.JButton searchButton;
    private javax.swing.ButtonGroup searchButtonGroup;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTable searchTable;
    private javax.swing.JTextField searchTextInput;
    private javax.swing.JMenuItem serverSettingsMenuItem;
    private javax.swing.JMenu settingsMenu;
    private javax.swing.JPanel vehiclesPendingPanel;
    // End of variables declaration//GEN-END:variables

    
}
